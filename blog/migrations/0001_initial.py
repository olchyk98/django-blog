# Generated by Django 2.1.7 on 2019-03-10 09:32

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('likes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
                ('image', models.CharField(max_length=300)),
                ('content', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('likes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.CharField(max_length=300)),
                ('name', models.CharField(max_length=100)),
                ('description', models.SlugField(max_length=800)),
                ('login', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='author',
            field=models.ManyToManyField(related_name='posts', to='blog.User'),
        ),
        migrations.AddField(
            model_name='post',
            name='comments',
            field=models.ManyToManyField(blank=True, related_name='posts', to='blog.Comment'),
        ),
        migrations.AddField(
            model_name='comment',
            name='author',
            field=models.ManyToManyField(related_name='comments', to='blog.User'),
        ),
    ]
